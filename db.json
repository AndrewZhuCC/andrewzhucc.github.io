{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/css/blog-style.css","path":"css/blog-style.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/css/syntax.styl","path":"css/syntax.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/js/blog.js","path":"js/blog.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/js/flowchart.js","path":"js/flowchart.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/js/raphael-min.js","path":"js/raphael-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-Anisina/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-Anisina/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/README.md","hash":"feab09dfaa2212528428d850bb89db7b670113ba","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/_config.yml","hash":"1a6492e8ab3d6f3ab6a374d037dbff2b98a8eb22","modified":1476348241000},{"_id":"themes/hexo-theme-Anisina/package.json","hash":"12541fbf56f785e4f5d486a55b4939f3033f625b","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/.git/FETCH_HEAD","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476361379000},{"_id":"source/Tags/index.md","hash":"f0613a64c04fefd98961475a25f85338d03cf5d4","modified":1476352583000},{"_id":"source/404/index.md","hash":"6ea425daac0dc4521b998fb6f863e8c19379b188","modified":1476357561000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1476352087000},{"_id":"source/_posts/iOS-RunLoop.md","hash":"44f4979950c5a71cc0fbfe10536edb63243ddd1a","modified":1476440800000},{"_id":"source/about/index.md","hash":"3fbca574ceb52e155cdfe5518a4eb1eb8d62c7b3","modified":1476432603000},{"_id":"source/flowchart/index.html","hash":"8e8009ce48df31333ca4e58c3954256741c66bdd","modified":1476432408000},{"_id":"themes/hexo-theme-Anisina/.git/COMMIT_EDITMSG","hash":"287194ad33f64982d262d9bfa5d092c91672b8c3","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/.git/config","hash":"3604a35f0d71f992772596e2398ac38689353b11","modified":1476361403000},{"_id":"themes/hexo-theme-Anisina/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/index","hash":"007a4d21dd0b0fe121d4be4c3dc3dfed2dfb8ee6","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/.git/packed-refs","hash":"6f299e362770d70250edb034cd187c9f3988f689","modified":1476361235000},{"_id":"themes/hexo-theme-Anisina/Screenshots/mobile-index.jpeg","hash":"cd75f77f5d865d42182e2233e354eeba9f114d98","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/404.ejs","hash":"1fe05722bd1b32bbe0ae4e3e880866f935e0ae11","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/archive.ejs","hash":"056fc63ffad55cf12595b6a0e55616cf7b754784","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/index.ejs","hash":"a94ac678f6b24a46824d45ec058b0ab2105a92c9","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/layout.ejs","hash":"9d3d82a707b107f42db34ef5a8016693da2be742","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/page.ejs","hash":"2799e0105a5cce223a0a3e04aeece3bbe57fa7b5","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/poetry.ejs","hash":"6c955d419050825e13d39c780d45aceafbf6552d","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/post.ejs","hash":"07a81a2b5c3cdb0692935e4a876219e5a5c645bd","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/tags.ejs","hash":"a144c3b5f4a70f881333e4de392a265469cdb649","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/works.ejs","hash":"1df954e54098cc4845295836374abed870789dcd","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/.DS_Store","hash":"414aec04f6358bb3aa2ed928bfe4359c877568c9","modified":1476429467000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1476347478000},{"_id":"themes/hexo-theme-Anisina/.git/logs/HEAD","hash":"54c37d97635fe3fc590fde3a7fe160367633648d","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/Screenshots/Anisina.png","hash":"146dd991f55a827a514259e20a51de1e9b07a13d","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/_partial/nav.ejs","hash":"b48cf2330e19838b9a73caf2e198b4d6e7a1a632","modified":1476374924000},{"_id":"themes/hexo-theme-Anisina/layout/_partial/head.ejs","hash":"ec828fadf26726db74f7c96d096c17481ec4fe70","modified":1476440967000},{"_id":"themes/hexo-theme-Anisina/layout/_partial/footer.ejs","hash":"223a29b0154c2dcc5f8a6b6fee67ef78ead266ad","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/css/blog-style.css","hash":"d064f7fd3b16dabca768a06e9779cbb7ba608ce7","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/css/syntax.styl","hash":"f3f9ff0d1ebc4f7fa18d7e367b2ba2f0899adbd4","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/js/blog.js","hash":"0f805c744ef8a48c0abdd9d204cfc19ee6cafc14","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/js/flowchart.js","hash":"ffc5a9f31670f2c8eaa7a2c6c31097ccea753473","modified":1476431255000},{"_id":"themes/hexo-theme-Anisina/source/js/totop.js","hash":"11ede60fccb7c763d6973f80efc78b47c0843746","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/Screenshots/poetry-show.png","hash":"f5fdcd25026a87a0aafeebb1f19cdb3c0a81a666","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/css/bootstrap.min.css","hash":"c5db932e115ff97af7b4512b947cde3ba2964db8","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/js/raphael-min.js","hash":"bfd83096d2178219ccd3f8fc592ae41cdf4e822e","modified":1476431224000},{"_id":"themes/hexo-theme-Anisina/.git/objects/0b/584c06b2d4e6b07f1dcf235ed6f5852fbbb298","hash":"76185cec8cb0d0c61bec36e5a2f6b1009440ef98","modified":1476361264000},{"_id":"themes/hexo-theme-Anisina/.git/objects/28/876ce3da3f47e096c260a523c921ad5e236ffc","hash":"48fedc05b867dab9efa6bbe3ccfb696877e04a6e","modified":1476361960000},{"_id":"themes/hexo-theme-Anisina/.git/objects/1c/76ef64d105a02e4f4675a8302d4a6b96f0b1eb","hash":"daed6c1d2acede62913d394162538b04d9c8dfed","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/.git/objects/31/227dfafea18cdb78774a117785d043cdc00c44","hash":"e9bdd4d526242f3ba7a39974e0e8c286bdbc78da","modified":1476361276000},{"_id":"themes/hexo-theme-Anisina/.git/objects/34/f78a546d23da227129b688ddd5b6bcd774a4aa","hash":"17afe3af5a0dbbee5daf70a02231c07048babc85","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/.git/objects/37/300268a952ede899d2025e62cd2c8f799559c9","hash":"a12a9c986aeb2f17cfc7a4686d9f32125fcbce68","modified":1476437341000},{"_id":"themes/hexo-theme-Anisina/.git/objects/37/d690d4fa0b22bbc2a76b5d438da967f443fdcb","hash":"d4d20a5b482db2a6c7fee236c7aa55f05c0d4edd","modified":1476361960000},{"_id":"themes/hexo-theme-Anisina/.git/objects/3b/d2c4b66c4063656815922ce8aeab8302ad4faa","hash":"e965287bd3e694b4c09f538f929e4e35eafbee4a","modified":1476375002000},{"_id":"themes/hexo-theme-Anisina/.git/objects/3f/02245ee07bc499bb2043ac136d6972de6ce698","hash":"678aa536edfed6cec341484946cd4f3ba0b7ad0a","modified":1476375002000},{"_id":"themes/hexo-theme-Anisina/.git/objects/4b/b97aaee8f984c043bd54322d8c9108a20f6f1a","hash":"54479a7b22255691625c491f981415febf909bea","modified":1476437341000},{"_id":"themes/hexo-theme-Anisina/.git/objects/53/d828e912a933286d51b1b2a11fcbd8010347c6","hash":"3e67863198c5c5181639c4a857c1554d895ed2a9","modified":1476361960000},{"_id":"themes/hexo-theme-Anisina/.git/objects/66/f29deab5a75dcc31fad2544ac0096c1e487661","hash":"5b616e11995b4fe2f91f1f796861a473b8b77731","modified":1476441028000},{"_id":"themes/hexo-theme-Anisina/.git/objects/6a/403e982cf4188d1622f0cafdf8ea3baf5677b3","hash":"3e36370b8bb5d6e292ec43ed69aaab42eaa1cef9","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/.git/objects/6b/3e247b50d3b3b12ae1a0faa50e04bbc18f6a45","hash":"a5433ad2bf98f279834a47abe636742cf168bedd","modified":1476437341000},{"_id":"themes/hexo-theme-Anisina/.git/objects/71/965412348de43eb5f96f7ef1e898fd89513ffc","hash":"4bcc4978f5b1e4c8c2681b37145ff29370997eac","modified":1476374993000},{"_id":"themes/hexo-theme-Anisina/.git/objects/75/7b838e933d5db0c67ca5ad7dacab05de80eb65","hash":"6579c9437405e1b2b76c22be0fe15bd221ca3a57","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/.git/objects/76/7cdb8db6378b57c95a1841f4068339c6288421","hash":"964763de5bfd222299621157d11967e43cfc2eb7","modified":1476375002000},{"_id":"themes/hexo-theme-Anisina/.git/objects/7b/80b6d65c38852e58b2dbf90b9669801db14385","hash":"156962789f2c3c884e7b4501da5a5c48b90f3c13","modified":1476361276000},{"_id":"themes/hexo-theme-Anisina/.git/objects/7c/54435cccf54884c4e7bb0014df7232f0bbb7ea","hash":"0ecc7f3d49c85ed02cd833d1837610d14e31261e","modified":1476375002000},{"_id":"themes/hexo-theme-Anisina/.git/objects/98/797a2f743f1f7814c5fb544d6f35012bbc5f32","hash":"7ebe0bae589a316628d306283bb4684464c2fbf1","modified":1476437341000},{"_id":"themes/hexo-theme-Anisina/.git/objects/98/b8254a883fca1cd3f337e3c2af2dda9cd83006","hash":"9c79f137b236a281d26091a4361019c7a49e792a","modified":1476361276000},{"_id":"themes/hexo-theme-Anisina/.git/objects/87/df3e033958a491146f7ea0b6110a4a5f4d8be7","hash":"d4363d8f1fff434719657f07589b4f490e0fac9d","modified":1476361276000},{"_id":"themes/hexo-theme-Anisina/.git/objects/b9/574fb515be432fe4020b3d8bef34389b4e8e0b","hash":"04e5b1bd7e1bb0c67be3907f615606c606ada167","modified":1476437341000},{"_id":"themes/hexo-theme-Anisina/.git/objects/c1/daf0e72b77e83f76ca64fe2dc26fe6c25793a3","hash":"e8be7dca3e275e52d228aadbd25ace35549dca01","modified":1476361960000},{"_id":"themes/hexo-theme-Anisina/.git/objects/cb/ee5aca25196b676ea4fc41c6160dcdac37bf4d","hash":"3c681980834a93639d2eb68116838aea707f1c47","modified":1476437319000},{"_id":"themes/hexo-theme-Anisina/.git/objects/ca/620cce2f5b2e31977b10b6376ac6355eb6df35","hash":"6c65534792a5da83db6f42642ecbcb8a1b794e4e","modified":1476437319000},{"_id":"themes/hexo-theme-Anisina/.git/objects/d6/85a625d69d32ea727ba6b0f881d94aae8e9cd9","hash":"8698bb18d9fe18bc5ec7eb42fd4ecec65b332c0f","modified":1476361948000},{"_id":"themes/hexo-theme-Anisina/.git/objects/dd/16a392be8fe45831a67390f4e819ad4f162a5b","hash":"5d66c97102b0fc9616c79d1b2a69d77b28546613","modified":1476437341000},{"_id":"themes/hexo-theme-Anisina/.git/objects/pack/pack-4419db553205cd76623376ba55766cd084ca9d45.idx","hash":"2fabbadbc904a59560ad057add5d82011cbda38d","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/.git/refs/heads/master","hash":"a280f00b83359878ee355b56f95d12f6c0c5a249","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/.git/objects/d3/0dbad858fcbf9b06edb7bff74cb8feecaa8b71","hash":"6c1764323fe11f328ac95683fe580c6041455303","modified":1476437319000},{"_id":"themes/hexo-theme-Anisina/Screenshots/mobile-post.jpeg","hash":"2081cdff23a9a8c185a48d9aabcc9dc8e77833ec","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/.git/logs/refs/heads/master","hash":"54c37d97635fe3fc590fde3a7fe160367633648d","modified":1476441036000},{"_id":"themes/hexo-theme-Anisina/.git/refs/remotes/origin/master","hash":"a280f00b83359878ee355b56f95d12f6c0c5a249","modified":1476441047000},{"_id":"themes/hexo-theme-Anisina/Screenshots/pc-index.png","hash":"b04094dac75cb656b4244c1dfaf246168a0f8926","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/.git/logs/refs/remotes/origin/master","hash":"adec50aa7f0867268cb2546626fd875ff5e3990b","modified":1476441047000},{"_id":"themes/hexo-theme-Anisina/.git/logs/refs/remotes/origin/HEAD","hash":"6c467434673260fc5145fa39bfecc2960423ea39","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/Screenshots/pc-post.png","hash":"cde56c0797b6ff8dd555fb1f8c3f9b21bceaa3be","modified":1476347666000},{"_id":"themes/hexo-theme-Anisina/.git/objects/pack/pack-4419db553205cd76623376ba55766cd084ca9d45.pack","hash":"7401ae72ede9a4bd4ebc6c0b1e1576b136797a17","modified":1476347666000},{"_id":"public/Tags/index.html","hash":"0b16a0146fe57e0b2c22a274544e5115db42fccb","modified":1476441066622},{"_id":"public/404/index.html","hash":"9c4c045427106edcc020e5489047678cd9d0d8be","modified":1476441066623},{"_id":"public/about/index.html","hash":"42a35d4e2f2fdc31bbaa67eb899e865b91d92fa3","modified":1476441066624},{"_id":"public/archives/index.html","hash":"f60e01c7e51d9369ae73aefd7805f9c116e55c13","modified":1476441066624},{"_id":"public/archives/2016/index.html","hash":"0ce3f5217e0074db82f700053e9e2449a270ae90","modified":1476441066624},{"_id":"public/archives/2016/10/index.html","hash":"e018ddb82d523afe58b0cac5155718f3d05dbda9","modified":1476441066624},{"_id":"public/tags/iOS/index.html","hash":"36e0e522be00ac93e37c8a6d8e48e043c8df8879","modified":1476441066624},{"_id":"public/tags/Code/index.html","hash":"55ee6b1a0b60cc442acf694dc1304656a5f32e1f","modified":1476441066624},{"_id":"public/flowchart/index.html","hash":"c2459317d69bc8e21509cec7ede460c90322d73a","modified":1476441066624},{"_id":"public/2016/10/14/iOS-RunLoop/index.html","hash":"8a1968ef23073df2fc5b4d21a5e1ff0dd07a7538","modified":1476441066624},{"_id":"public/2016/10/13/hello-world/index.html","hash":"7b7523b95c7244d9794528f1704ac92524461de0","modified":1476441066624},{"_id":"public/index.html","hash":"b2702668c365d33a87231ae740eb534b143e0c3f","modified":1476441066624},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1476441066628},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1476441066628},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1476441066629},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1476441066629},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1476441066876},{"_id":"public/css/syntax.css","hash":"4616879fec214c9cc4f5835615348f0bbeabf2a9","modified":1476441066885},{"_id":"public/js/blog.js","hash":"0f805c744ef8a48c0abdd9d204cfc19ee6cafc14","modified":1476441066885},{"_id":"public/js/totop.js","hash":"11ede60fccb7c763d6973f80efc78b47c0843746","modified":1476441066885},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1476441066885},{"_id":"public/css/blog-style.css","hash":"d064f7fd3b16dabca768a06e9779cbb7ba608ce7","modified":1476441066885},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1476441066885},{"_id":"public/js/flowchart.js","hash":"ffc5a9f31670f2c8eaa7a2c6c31097ccea753473","modified":1476441066885},{"_id":"public/css/bootstrap.min.css","hash":"c5db932e115ff97af7b4512b947cde3ba2964db8","modified":1476441066885},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1476441066886},{"_id":"public/js/raphael-min.js","hash":"bfd83096d2178219ccd3f8fc592ae41cdf4e822e","modified":1476441066886},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1476441066886}],"Category":[],"Data":[],"Page":[{"title":"Tags","date":"2016-10-13T09:55:39.000Z","layout":"tags","_content":"","source":"Tags/index.md","raw":"---\ntitle: Tags\ndate: 2016-10-13 17:55:39\nlayout: tags\n---\n","updated":"2016-10-13T09:56:23.000Z","path":"Tags/index.html","comments":1,"_id":"ciu9mw1sr00009v1aqbvn2p7r","content":"","excerpt":"","more":""},{"title":"404","date":"2016-10-13T11:19:00.000Z","layout":"404","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2016-10-13 19:19:00\nlayout: 404\n---\n","updated":"2016-10-13T11:19:21.000Z","path":"404/index.html","comments":1,"_id":"ciu9mw1sy00029v1a7seb2p65","content":"","excerpt":"","more":""},{"title":"About","date":"2016-10-13T10:10:24.000Z","_content":"\n# About Me\n\n- iOS开发二年级小同学\n- 非科班\n- 仰望星空毕业生\n- 工科男\n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2016-10-13 18:10:24\n---\n\n# About Me\n\n- iOS开发二年级小同学\n- 非科班\n- 仰望星空毕业生\n- 工科男\n","updated":"2016-10-14T08:10:03.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciu9mw1tt00089v1ay03zv7ag","content":"<h1 id=\"About-Me\"><a href=\"#About-Me\" class=\"headerlink\" title=\"About Me\"></a>About Me</h1><ul>\n<li>iOS开发二年级小同学</li>\n<li>非科班</li>\n<li>仰望星空毕业生</li>\n<li>工科男</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"About-Me\"><a href=\"#About-Me\" class=\"headerlink\" title=\"About Me\"></a>About Me</h1><ul>\n<li>iOS开发二年级小同学</li>\n<li>非科班</li>\n<li>仰望星空毕业生</li>\n<li>工科男</li>\n</ul>\n"},{"_content":"<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>flowchart.js · Playground</title>\n        <style type=\"text/css\">\n          .end-element { background-color : #FFCCFF; }\n        </style>\n        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js\"></script>\n        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js\"></script>\n        <script src=\"http://flowchart.js.org/flowchart-latest.js\"></script>\n        <!--<script src=\"../release/flowchart.min.js\"></script>-->\n        <script>\n            window.onload = function () {\n                var btn = document.getElementById(\"run\"),\n                    cd = document.getElementById(\"code\"),\n                    chart;\n                (btn.onclick = function () {\n                    var code = cd.value;\n                    if (chart) {\n                      chart.clean();\n                    }\n                    chart = flowchart.parse(code);\n                    chart.drawSVG('canvas', {\n                      // 'x': 30,\n                      // 'y': 50,\n                      'line-width': 3,\n                      'line-length': 50,\n                      'text-margin': 10,\n                      'font-size': 14,\n                      'font': 'normal',\n                      'font-family': 'Helvetica',\n                      'font-weight': 'normal',\n                      'font-color': 'black',\n                      'line-color': 'black',\n                      'element-color': 'black',\n                      'fill': 'white',\n                      'yes-text': 'yes',\n                      'no-text': 'no',\n                      'arrow-end': 'block',\n                      'scale': 1,\n                      'symbols': {\n                        'start': {\n                          'font-color': 'red',\n                          'element-color': 'green',\n                          'fill': 'yellow'\n                        },\n                        'end':{\n                          'class': 'end-element'\n                        }\n                      },\n                      'flowstate' : {\n                        'past' : { 'fill' : '#CCCCCC', 'font-size' : 12},\n                        'current' : {'fill' : 'yellow', 'font-color' : 'red', 'font-weight' : 'bold'},\n                        'future' : { 'fill' : '#FFFF99'},\n                        'request' : { 'fill' : 'blue'},\n                        'invalid': {'fill' : '#444444'},\n                        'approved' : { 'fill' : '#58C4A3', 'font-size' : 12, 'yes-text' : 'APPROVED', 'no-text' : 'n/a' },\n                        'rejected' : { 'fill' : '#C45879', 'font-size' : 12, 'yes-text' : 'n/a', 'no-text' : 'REJECTED' }\n                      }\n                    });\n                    $('[id^=sub1]').click(function(){\n                      alert('info here');\n                    });\n                })();\n            };\n        </script>\n    </head>\n    <body>\n        <div><textarea id=\"code\" style=\"width: 100%;\" rows=\"11\">\nst=>start: Start|past:>http://www.google.com[blank]\ne=>end: End:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|request\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e\n        </textarea></div>\n        <div><button id=\"run\" type=\"button\">Run</button></div>\n        <div id=\"canvas\"></div>\n    </body>\n</html>\n","source":"flowchart/index.html","raw":"<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>flowchart.js · Playground</title>\n        <style type=\"text/css\">\n          .end-element { background-color : #FFCCFF; }\n        </style>\n        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js\"></script>\n        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js\"></script>\n        <script src=\"http://flowchart.js.org/flowchart-latest.js\"></script>\n        <!--<script src=\"../release/flowchart.min.js\"></script>-->\n        <script>\n            window.onload = function () {\n                var btn = document.getElementById(\"run\"),\n                    cd = document.getElementById(\"code\"),\n                    chart;\n                (btn.onclick = function () {\n                    var code = cd.value;\n                    if (chart) {\n                      chart.clean();\n                    }\n                    chart = flowchart.parse(code);\n                    chart.drawSVG('canvas', {\n                      // 'x': 30,\n                      // 'y': 50,\n                      'line-width': 3,\n                      'line-length': 50,\n                      'text-margin': 10,\n                      'font-size': 14,\n                      'font': 'normal',\n                      'font-family': 'Helvetica',\n                      'font-weight': 'normal',\n                      'font-color': 'black',\n                      'line-color': 'black',\n                      'element-color': 'black',\n                      'fill': 'white',\n                      'yes-text': 'yes',\n                      'no-text': 'no',\n                      'arrow-end': 'block',\n                      'scale': 1,\n                      'symbols': {\n                        'start': {\n                          'font-color': 'red',\n                          'element-color': 'green',\n                          'fill': 'yellow'\n                        },\n                        'end':{\n                          'class': 'end-element'\n                        }\n                      },\n                      'flowstate' : {\n                        'past' : { 'fill' : '#CCCCCC', 'font-size' : 12},\n                        'current' : {'fill' : 'yellow', 'font-color' : 'red', 'font-weight' : 'bold'},\n                        'future' : { 'fill' : '#FFFF99'},\n                        'request' : { 'fill' : 'blue'},\n                        'invalid': {'fill' : '#444444'},\n                        'approved' : { 'fill' : '#58C4A3', 'font-size' : 12, 'yes-text' : 'APPROVED', 'no-text' : 'n/a' },\n                        'rejected' : { 'fill' : '#C45879', 'font-size' : 12, 'yes-text' : 'n/a', 'no-text' : 'REJECTED' }\n                      }\n                    });\n                    $('[id^=sub1]').click(function(){\n                      alert('info here');\n                    });\n                })();\n            };\n        </script>\n    </head>\n    <body>\n        <div><textarea id=\"code\" style=\"width: 100%;\" rows=\"11\">\nst=>start: Start|past:>http://www.google.com[blank]\ne=>end: End:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|request\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e\n        </textarea></div>\n        <div><button id=\"run\" type=\"button\">Run</button></div>\n        <div id=\"canvas\"></div>\n    </body>\n</html>\n","date":"2016-10-14T08:06:48.000Z","updated":"2016-10-14T08:06:48.000Z","path":"flowchart/index.html","title":"","comments":1,"layout":"page","_id":"ciu9mw1tu00099v1aeahzxi08","content":"<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>flowchart.js · Playground</title>\n        <style type=\"text/css\">\n          .end-element { background-color : #FFCCFF; }\n        </style>\n        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js\"></script>\n        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js\"></script>\n        <script src=\"http://flowchart.js.org/flowchart-latest.js\"></script>\n        <!--<script src=\"../release/flowchart.min.js\"></script>-->\n        <script>\n            window.onload = function () {\n                var btn = document.getElementById(\"run\"),\n                    cd = document.getElementById(\"code\"),\n                    chart;\n                (btn.onclick = function () {\n                    var code = cd.value;\n                    if (chart) {\n                      chart.clean();\n                    }\n                    chart = flowchart.parse(code);\n                    chart.drawSVG('canvas', {\n                      // 'x': 30,\n                      // 'y': 50,\n                      'line-width': 3,\n                      'line-length': 50,\n                      'text-margin': 10,\n                      'font-size': 14,\n                      'font': 'normal',\n                      'font-family': 'Helvetica',\n                      'font-weight': 'normal',\n                      'font-color': 'black',\n                      'line-color': 'black',\n                      'element-color': 'black',\n                      'fill': 'white',\n                      'yes-text': 'yes',\n                      'no-text': 'no',\n                      'arrow-end': 'block',\n                      'scale': 1,\n                      'symbols': {\n                        'start': {\n                          'font-color': 'red',\n                          'element-color': 'green',\n                          'fill': 'yellow'\n                        },\n                        'end':{\n                          'class': 'end-element'\n                        }\n                      },\n                      'flowstate' : {\n                        'past' : { 'fill' : '#CCCCCC', 'font-size' : 12},\n                        'current' : {'fill' : 'yellow', 'font-color' : 'red', 'font-weight' : 'bold'},\n                        'future' : { 'fill' : '#FFFF99'},\n                        'request' : { 'fill' : 'blue'},\n                        'invalid': {'fill' : '#444444'},\n                        'approved' : { 'fill' : '#58C4A3', 'font-size' : 12, 'yes-text' : 'APPROVED', 'no-text' : 'n/a' },\n                        'rejected' : { 'fill' : '#C45879', 'font-size' : 12, 'yes-text' : 'n/a', 'no-text' : 'REJECTED' }\n                      }\n                    });\n                    $('[id^=sub1]').click(function(){\n                      alert('info here');\n                    });\n                })();\n            };\n        </script>\n    </head>\n    <body>\n        <div><textarea id=\"code\" style=\"width: 100%;\" rows=\"11\">\nst=>start: Start|past:>http://www.google.com[blank]\ne=>end: End:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|request\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e\n        </textarea></div>\n        <div><button id=\"run\" type=\"button\">Run</button></div>\n        <div id=\"canvas\"></div>\n    </body>\n</html>\n","excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>flowchart.js · Playground</title>\n        <style type=\"text/css\">\n          .end-element { background-color : #FFCCFF; }\n        </style>\n        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js\"></script>\n        <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js\"></script>\n        <script src=\"http://flowchart.js.org/flowchart-latest.js\"></script>\n        <!--<script src=\"../release/flowchart.min.js\"></script>-->\n        <script>\n            window.onload = function () {\n                var btn = document.getElementById(\"run\"),\n                    cd = document.getElementById(\"code\"),\n                    chart;\n                (btn.onclick = function () {\n                    var code = cd.value;\n                    if (chart) {\n                      chart.clean();\n                    }\n                    chart = flowchart.parse(code);\n                    chart.drawSVG('canvas', {\n                      // 'x': 30,\n                      // 'y': 50,\n                      'line-width': 3,\n                      'line-length': 50,\n                      'text-margin': 10,\n                      'font-size': 14,\n                      'font': 'normal',\n                      'font-family': 'Helvetica',\n                      'font-weight': 'normal',\n                      'font-color': 'black',\n                      'line-color': 'black',\n                      'element-color': 'black',\n                      'fill': 'white',\n                      'yes-text': 'yes',\n                      'no-text': 'no',\n                      'arrow-end': 'block',\n                      'scale': 1,\n                      'symbols': {\n                        'start': {\n                          'font-color': 'red',\n                          'element-color': 'green',\n                          'fill': 'yellow'\n                        },\n                        'end':{\n                          'class': 'end-element'\n                        }\n                      },\n                      'flowstate' : {\n                        'past' : { 'fill' : '#CCCCCC', 'font-size' : 12},\n                        'current' : {'fill' : 'yellow', 'font-color' : 'red', 'font-weight' : 'bold'},\n                        'future' : { 'fill' : '#FFFF99'},\n                        'request' : { 'fill' : 'blue'},\n                        'invalid': {'fill' : '#444444'},\n                        'approved' : { 'fill' : '#58C4A3', 'font-size' : 12, 'yes-text' : 'APPROVED', 'no-text' : 'n/a' },\n                        'rejected' : { 'fill' : '#C45879', 'font-size' : 12, 'yes-text' : 'n/a', 'no-text' : 'REJECTED' }\n                      }\n                    });\n                    $('[id^=sub1]').click(function(){\n                      alert('info here');\n                    });\n                })();\n            };\n        </script>\n    </head>\n    <body>\n        <div><textarea id=\"code\" style=\"width: 100%;\" rows=\"11\">\nst=>start: Start|past:>http://www.google.com[blank]\ne=>end: End:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|request\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->sub1(left)->op1\nc2(yes)->io->e\nc2(no)->op2->e\n        </textarea></div>\n        <div><button id=\"run\" type=\"button\">Run</button></div>\n        <div id=\"canvas\"></div>\n    </body>\n</html>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-10-13T09:48:07.000Z","updated":"2016-10-13T09:48:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu9mw1st00019v1ao612qwvs","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"iOS RunLoop","date":"2016-10-14T04:46:57.000Z","_content":"\n# RunLoop\n## `CFRunLoop` vs `NSRunLoop`\n`CFRunLoop` 是 `NSRunLoop` 在 `CoreFoundation` 中的底层形式，即 `NSRunLoop` 是 `CFRunLoop` 的封装。<br>\n\n`CFRunLoop` 有一个通用启动方法，`NSRunLoop` 通过指定该方法的 `timeout` 参数和 `stopAfterHandle` ，来实现\n```obj-c\n[[NSRunLoop currentRunLoop] run];\n```\n和\n```obj-c\n[[NSRunLoop currentRunLoop] runUntilDate:[NSDate date]];\n```\n\n## `source0` vs `source1`\n我们平时在 `NSThread` 层手动创建线程的时候，会手动启动一个 `NSRunLoop`。代码形如\n```obj-c\n[[NSRunLoop currentRunLoop] addPort:[NSMachPort port] forMode:NSDefaultRunLoopMode];\nwhile (running) {\n\t[[NSRunLoop currentRunLoop] run];\n}\n```\n在代码中向 `NSRunLoop` 添加的 `[NSMachPort port]` 即是一个端口，通常用于通过 `Mach` 实现进程间通信。在此添加是为了不让 `runloop` 一直处于循环之中，添加 `port` 可以使 `runloop` 在没有事件需要处理的时候进入等待状态。<br>\n`NSMachPort` 就属于一种 `source1` ，添加到 `runloop` 当中。其他进程可以通过其暴露的 `port` 向其通信，并且唤醒 `runloop` 开始处理事件。<br>\n比如：\n\n- 硬件方面\n  - 各种传感器传来的事件\n  - 用户点击屏幕的事件等\n\n- 底层事件\n  - 如网络请求等\n\n`source1` 被处理时会触发添加 `source` 时声明的回调函数。<br>\n比如用户触摸屏幕会由系统将 `source1` 标记为已准备，而 `app` 层面的 `UIEvent` 则是在该 `source1` 的回调函数中手动触发某 `source0`，然后唤醒 `runloop` 处理该 `source0`。因此，接收到 `UIEvent` 是从 `source0` 处被调用。\n\n## `CFRunLoop` 流程\n\n{% raw %}\n<textarea id=\"flowchart_code\" style=\"display: none;\">\nstart=>start: CFRunLoop\nend=>end: Exit\nop1=>operation: Get CurrentMode\nop2=>operation: doObserver: kCFRunLoopEntry\nop3=>operation: Entry: currentMode\nop4=>operation: doObserver: kCFRunLoopBeforeTimers\nop5=>operation: doObserver: kCFRunLoopBeforeSources\nop6=>operation: doBlocks: from dispatch (?)\nop7=>operation: doSource0: 调用被CFRunLoopSourceSignal(source)标记的source0\nop8=>operation: doBlocks\ncond1=>condition: source1 ready?\nop9=>operation: doObserver: kCFRunLoopBeforeWaiting\nop10=>operation: mach_msg(msg, MACH_RCV_MSG, port)\ncond2=>condition: WakeUp?\nop11=>operation: doObserver: kCFRunLoopAfterWaiting\nop12=>operation: handleMsg\nop13=>operation: doTimers/do dispatch到main_queue的block/doSource1\nop14=>operation: doBlocks\ncond3=>condition: ModeIsEmpty?\nop15=>operation: doObserver: kCFRunLoopExit\n\nstart->op1->op2->op3->op4->op5->op6->op7->op8\nop8->cond1\ncond1(yes)->op12\ncond1(no, left)->op9->op10\nop10->cond2\ncond2(yes)->op11\nop11(right)->op12->op13->op14->cond3\ncond3(no, left)->op4\ncond3(yes, right)->op15->end\n</textarea>\n<div id=\"flowchart_canvas\"></div>\n{% endraw %}\n\n","source":"_posts/iOS-RunLoop.md","raw":"---\ntitle: iOS RunLoop\ndate: 2016-10-14 12:46:57\ntags:\n- iOS\n- Code\n---\n\n# RunLoop\n## `CFRunLoop` vs `NSRunLoop`\n`CFRunLoop` 是 `NSRunLoop` 在 `CoreFoundation` 中的底层形式，即 `NSRunLoop` 是 `CFRunLoop` 的封装。<br>\n\n`CFRunLoop` 有一个通用启动方法，`NSRunLoop` 通过指定该方法的 `timeout` 参数和 `stopAfterHandle` ，来实现\n```obj-c\n[[NSRunLoop currentRunLoop] run];\n```\n和\n```obj-c\n[[NSRunLoop currentRunLoop] runUntilDate:[NSDate date]];\n```\n\n## `source0` vs `source1`\n我们平时在 `NSThread` 层手动创建线程的时候，会手动启动一个 `NSRunLoop`。代码形如\n```obj-c\n[[NSRunLoop currentRunLoop] addPort:[NSMachPort port] forMode:NSDefaultRunLoopMode];\nwhile (running) {\n\t[[NSRunLoop currentRunLoop] run];\n}\n```\n在代码中向 `NSRunLoop` 添加的 `[NSMachPort port]` 即是一个端口，通常用于通过 `Mach` 实现进程间通信。在此添加是为了不让 `runloop` 一直处于循环之中，添加 `port` 可以使 `runloop` 在没有事件需要处理的时候进入等待状态。<br>\n`NSMachPort` 就属于一种 `source1` ，添加到 `runloop` 当中。其他进程可以通过其暴露的 `port` 向其通信，并且唤醒 `runloop` 开始处理事件。<br>\n比如：\n\n- 硬件方面\n  - 各种传感器传来的事件\n  - 用户点击屏幕的事件等\n\n- 底层事件\n  - 如网络请求等\n\n`source1` 被处理时会触发添加 `source` 时声明的回调函数。<br>\n比如用户触摸屏幕会由系统将 `source1` 标记为已准备，而 `app` 层面的 `UIEvent` 则是在该 `source1` 的回调函数中手动触发某 `source0`，然后唤醒 `runloop` 处理该 `source0`。因此，接收到 `UIEvent` 是从 `source0` 处被调用。\n\n## `CFRunLoop` 流程\n\n{% raw %}\n<textarea id=\"flowchart_code\" style=\"display: none;\">\nstart=>start: CFRunLoop\nend=>end: Exit\nop1=>operation: Get CurrentMode\nop2=>operation: doObserver: kCFRunLoopEntry\nop3=>operation: Entry: currentMode\nop4=>operation: doObserver: kCFRunLoopBeforeTimers\nop5=>operation: doObserver: kCFRunLoopBeforeSources\nop6=>operation: doBlocks: from dispatch (?)\nop7=>operation: doSource0: 调用被CFRunLoopSourceSignal(source)标记的source0\nop8=>operation: doBlocks\ncond1=>condition: source1 ready?\nop9=>operation: doObserver: kCFRunLoopBeforeWaiting\nop10=>operation: mach_msg(msg, MACH_RCV_MSG, port)\ncond2=>condition: WakeUp?\nop11=>operation: doObserver: kCFRunLoopAfterWaiting\nop12=>operation: handleMsg\nop13=>operation: doTimers/do dispatch到main_queue的block/doSource1\nop14=>operation: doBlocks\ncond3=>condition: ModeIsEmpty?\nop15=>operation: doObserver: kCFRunLoopExit\n\nstart->op1->op2->op3->op4->op5->op6->op7->op8\nop8->cond1\ncond1(yes)->op12\ncond1(no, left)->op9->op10\nop10->cond2\ncond2(yes)->op11\nop11(right)->op12->op13->op14->cond3\ncond3(no, left)->op4\ncond3(yes, right)->op15->end\n</textarea>\n<div id=\"flowchart_canvas\"></div>\n{% endraw %}\n\n","slug":"iOS-RunLoop","published":1,"updated":"2016-10-14T10:26:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu9mw1sy00039v1apcqyzxi0","content":"<h1 id=\"RunLoop\"><a href=\"#RunLoop\" class=\"headerlink\" title=\"RunLoop\"></a>RunLoop</h1><h2 id=\"CFRunLoop-vs-NSRunLoop\"><a href=\"#CFRunLoop-vs-NSRunLoop\" class=\"headerlink\" title=\"CFRunLoop vs NSRunLoop\"></a><code>CFRunLoop</code> vs <code>NSRunLoop</code></h2><p><code>CFRunLoop</code> 是 <code>NSRunLoop</code> 在 <code>CoreFoundation</code> 中的底层形式，即 <code>NSRunLoop</code> 是 <code>CFRunLoop</code> 的封装。<br></p>\n<p><code>CFRunLoop</code> 有一个通用启动方法，<code>NSRunLoop</code> 通过指定该方法的 <code>timeout</code> 参数和 <code>stopAfterHandle</code> ，来实现<br><figure class=\"highlight obj-c\"><table><tr><td class=\"code\"><pre><div class=\"line\">[[<span class=\"built_in\">NSRunLoop</span> currentRunLoop] run];</div></pre></td></tr></table></figure></p>\n<p>和<br><figure class=\"highlight obj-c\"><table><tr><td class=\"code\"><pre><div class=\"line\">[[<span class=\"built_in\">NSRunLoop</span> currentRunLoop] runUntilDate:[<span class=\"built_in\">NSDate</span> date]];</div></pre></td></tr></table></figure></p>\n<h2 id=\"source0-vs-source1\"><a href=\"#source0-vs-source1\" class=\"headerlink\" title=\"source0 vs source1\"></a><code>source0</code> vs <code>source1</code></h2><p>我们平时在 <code>NSThread</code> 层手动创建线程的时候，会手动启动一个 <code>NSRunLoop</code>。代码形如<br><figure class=\"highlight obj-c\"><table><tr><td class=\"code\"><pre><div class=\"line\">[[<span class=\"built_in\">NSRunLoop</span> currentRunLoop] addPort:[<span class=\"built_in\">NSMachPort</span> port] forMode:<span class=\"built_in\">NSDefaultRunLoopMode</span>];</div><div class=\"line\"><span class=\"keyword\">while</span> (running) &#123;</div><div class=\"line\">\t[[<span class=\"built_in\">NSRunLoop</span> currentRunLoop] run];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在代码中向 <code>NSRunLoop</code> 添加的 <code>[NSMachPort port]</code> 即是一个端口，通常用于通过 <code>Mach</code> 实现进程间通信。在此添加是为了不让 <code>runloop</code> 一直处于循环之中，添加 <code>port</code> 可以使 <code>runloop</code> 在没有事件需要处理的时候进入等待状态。<br><br><code>NSMachPort</code> 就属于一种 <code>source1</code> ，添加到 <code>runloop</code> 当中。其他进程可以通过其暴露的 <code>port</code> 向其通信，并且唤醒 <code>runloop</code> 开始处理事件。<br><br>比如：</p>\n<ul>\n<li><p>硬件方面</p>\n<ul>\n<li>各种传感器传来的事件</li>\n<li>用户点击屏幕的事件等</li>\n</ul>\n</li>\n<li><p>底层事件</p>\n<ul>\n<li>如网络请求等</li>\n</ul>\n</li>\n</ul>\n<p><code>source1</code> 被处理时会触发添加 <code>source</code> 时声明的回调函数。<br><br>比如用户触摸屏幕会由系统将 <code>source1</code> 标记为已准备，而 <code>app</code> 层面的 <code>UIEvent</code> 则是在该 <code>source1</code> 的回调函数中手动触发某 <code>source0</code>，然后唤醒 <code>runloop</code> 处理该 <code>source0</code>。因此，接收到 <code>UIEvent</code> 是从 <code>source0</code> 处被调用。</p>\n<h2 id=\"CFRunLoop-流程\"><a href=\"#CFRunLoop-流程\" class=\"headerlink\" title=\"CFRunLoop 流程\"></a><code>CFRunLoop</code> 流程</h2>\n<textarea id=\"flowchart_code\" style=\"display: none;\">\nstart=>start: CFRunLoop\nend=>end: Exit\nop1=>operation: Get CurrentMode\nop2=>operation: doObserver: kCFRunLoopEntry\nop3=>operation: Entry: currentMode\nop4=>operation: doObserver: kCFRunLoopBeforeTimers\nop5=>operation: doObserver: kCFRunLoopBeforeSources\nop6=>operation: doBlocks: from dispatch (?)\nop7=>operation: doSource0: 调用被CFRunLoopSourceSignal(source)标记的source0\nop8=>operation: doBlocks\ncond1=>condition: source1 ready?\nop9=>operation: doObserver: kCFRunLoopBeforeWaiting\nop10=>operation: mach_msg(msg, MACH_RCV_MSG, port)\ncond2=>condition: WakeUp?\nop11=>operation: doObserver: kCFRunLoopAfterWaiting\nop12=>operation: handleMsg\nop13=>operation: doTimers/do dispatch到main_queue的block/doSource1\nop14=>operation: doBlocks\ncond3=>condition: ModeIsEmpty?\nop15=>operation: doObserver: kCFRunLoopExit\n\nstart->op1->op2->op3->op4->op5->op6->op7->op8\nop8->cond1\ncond1(yes)->op12\ncond1(no, left)->op9->op10\nop10->cond2\ncond2(yes)->op11\nop11(right)->op12->op13->op14->cond3\ncond3(no, left)->op4\ncond3(yes, right)->op15->end\n</textarea>\n<div id=\"flowchart_canvas\"></div>\n\n","excerpt":"","more":"<h1 id=\"RunLoop\"><a href=\"#RunLoop\" class=\"headerlink\" title=\"RunLoop\"></a>RunLoop</h1><h2 id=\"CFRunLoop-vs-NSRunLoop\"><a href=\"#CFRunLoop-vs-NSRunLoop\" class=\"headerlink\" title=\"CFRunLoop vs NSRunLoop\"></a><code>CFRunLoop</code> vs <code>NSRunLoop</code></h2><p><code>CFRunLoop</code> 是 <code>NSRunLoop</code> 在 <code>CoreFoundation</code> 中的底层形式，即 <code>NSRunLoop</code> 是 <code>CFRunLoop</code> 的封装。<br></p>\n<p><code>CFRunLoop</code> 有一个通用启动方法，<code>NSRunLoop</code> 通过指定该方法的 <code>timeout</code> 参数和 <code>stopAfterHandle</code> ，来实现<br><figure class=\"highlight obj-c\"><table><tr><td class=\"code\"><pre><div class=\"line\">[[<span class=\"built_in\">NSRunLoop</span> currentRunLoop] run];</div></pre></td></tr></table></figure></p>\n<p>和<br><figure class=\"highlight obj-c\"><table><tr><td class=\"code\"><pre><div class=\"line\">[[<span class=\"built_in\">NSRunLoop</span> currentRunLoop] runUntilDate:[<span class=\"built_in\">NSDate</span> date]];</div></pre></td></tr></table></figure></p>\n<h2 id=\"source0-vs-source1\"><a href=\"#source0-vs-source1\" class=\"headerlink\" title=\"source0 vs source1\"></a><code>source0</code> vs <code>source1</code></h2><p>我们平时在 <code>NSThread</code> 层手动创建线程的时候，会手动启动一个 <code>NSRunLoop</code>。代码形如<br><figure class=\"highlight obj-c\"><table><tr><td class=\"code\"><pre><div class=\"line\">[[<span class=\"built_in\">NSRunLoop</span> currentRunLoop] addPort:[<span class=\"built_in\">NSMachPort</span> port] forMode:<span class=\"built_in\">NSDefaultRunLoopMode</span>];</div><div class=\"line\"><span class=\"keyword\">while</span> (running) &#123;</div><div class=\"line\">\t[[<span class=\"built_in\">NSRunLoop</span> currentRunLoop] run];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在代码中向 <code>NSRunLoop</code> 添加的 <code>[NSMachPort port]</code> 即是一个端口，通常用于通过 <code>Mach</code> 实现进程间通信。在此添加是为了不让 <code>runloop</code> 一直处于循环之中，添加 <code>port</code> 可以使 <code>runloop</code> 在没有事件需要处理的时候进入等待状态。<br><br><code>NSMachPort</code> 就属于一种 <code>source1</code> ，添加到 <code>runloop</code> 当中。其他进程可以通过其暴露的 <code>port</code> 向其通信，并且唤醒 <code>runloop</code> 开始处理事件。<br><br>比如：</p>\n<ul>\n<li><p>硬件方面</p>\n<ul>\n<li>各种传感器传来的事件</li>\n<li>用户点击屏幕的事件等</li>\n</ul>\n</li>\n<li><p>底层事件</p>\n<ul>\n<li>如网络请求等</li>\n</ul>\n</li>\n</ul>\n<p><code>source1</code> 被处理时会触发添加 <code>source</code> 时声明的回调函数。<br><br>比如用户触摸屏幕会由系统将 <code>source1</code> 标记为已准备，而 <code>app</code> 层面的 <code>UIEvent</code> 则是在该 <code>source1</code> 的回调函数中手动触发某 <code>source0</code>，然后唤醒 <code>runloop</code> 处理该 <code>source0</code>。因此，接收到 <code>UIEvent</code> 是从 <code>source0</code> 处被调用。</p>\n<h2 id=\"CFRunLoop-流程\"><a href=\"#CFRunLoop-流程\" class=\"headerlink\" title=\"CFRunLoop 流程\"></a><code>CFRunLoop</code> 流程</h2>\n<textarea id=\"flowchart_code\" style=\"display: none;\">\nstart=>start: CFRunLoop\nend=>end: Exit\nop1=>operation: Get CurrentMode\nop2=>operation: doObserver: kCFRunLoopEntry\nop3=>operation: Entry: currentMode\nop4=>operation: doObserver: kCFRunLoopBeforeTimers\nop5=>operation: doObserver: kCFRunLoopBeforeSources\nop6=>operation: doBlocks: from dispatch (?)\nop7=>operation: doSource0: 调用被CFRunLoopSourceSignal(source)标记的source0\nop8=>operation: doBlocks\ncond1=>condition: source1 ready?\nop9=>operation: doObserver: kCFRunLoopBeforeWaiting\nop10=>operation: mach_msg(msg, MACH_RCV_MSG, port)\ncond2=>condition: WakeUp?\nop11=>operation: doObserver: kCFRunLoopAfterWaiting\nop12=>operation: handleMsg\nop13=>operation: doTimers/do dispatch到main_queue的block/doSource1\nop14=>operation: doBlocks\ncond3=>condition: ModeIsEmpty?\nop15=>operation: doObserver: kCFRunLoopExit\n\nstart->op1->op2->op3->op4->op5->op6->op7->op8\nop8->cond1\ncond1(yes)->op12\ncond1(no, left)->op9->op10\nop10->cond2\ncond2(yes)->op11\nop11(right)->op12->op13->op14->cond3\ncond3(no, left)->op4\ncond3(yes, right)->op15->end\n</textarea>\n<div id=\"flowchart_canvas\"></div>\n\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciu9mw1sy00039v1apcqyzxi0","tag_id":"ciu9mw1t100049v1a957g4olk","_id":"ciu9mw1t900069v1ape24fkb0"},{"post_id":"ciu9mw1sy00039v1apcqyzxi0","tag_id":"ciu9mw1t600059v1aflu02w7m","_id":"ciu9mw1ta00079v1a1yxdonik"}],"Tag":[{"name":"iOS","_id":"ciu9mw1t100049v1a957g4olk"},{"name":"Code","_id":"ciu9mw1t600059v1aflu02w7m"}]}}